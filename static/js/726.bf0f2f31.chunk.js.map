{"version":3,"file":"static/js/726.bf0f2f31.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","views/ContactsView.js"],"sourcesContent":["import { useState } from 'react';\nimport { CssVarsProvider } from '@mui/joy/styles';\nimport Sheet from '@mui/joy/Sheet';\nimport Typography from '@mui/joy/Typography';\nimport TextField from '@mui/joy/TextField';\nimport Button from '@mui/joy/Button';\nimport { nanoid } from 'nanoid';\n// import s from './ContactForm.module.css';\nimport {\n  useCreateContactsMutation,\n  useFetchContactsQuery,\n} from '../../redux/contactSlice';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { data } = useFetchContactsQuery();\n\n  const [createContact] = useCreateContactsMutation();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        console.warn(`${name} is not processed`);\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const contact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    const getSameName = name => {\n      return data.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      );\n    };\n\n    getSameName(contact.name)\n      ? alert(`${contact.name} is already in contacts.`)\n      : createContact(contact) && reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <CssVarsProvider>\n      <Sheet\n        sx={{\n          maxWidth: 500,\n          mx: 'auto',\n          my: 4,\n          py: 3,\n          px: 2,\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2,\n          borderRadius: 'sm',\n          boxShadow: 'md',\n        }}\n      >\n        <div>\n          <Typography level=\"h4\" component=\"h1\">\n            <b>Phonebook</b>\n          </Typography>\n          <Typography level=\"body2\">Please, add your contacts</Typography>\n        </div>\n        <form onSubmit={handleSubmit}>\n          <TextField\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            placeholder=\"John Doe\"\n            label=\"Name\"\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <TextField\n            name=\"number\"\n            type=\"tel\"\n            placeholder=\"093-111-22-33\"\n            label=\"Number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <Button\n            type=\"submit\"\n            color=\"info\"\n            sx={{\n              mt: 1,\n            }}\n          >\n            Add contacts\n          </Button>\n        </form>\n      </Sheet>\n    </CssVarsProvider>\n  );\n}\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"ContactListItem_listItem__upGA2\",\"itemElement\":\"ContactListItem_itemElement__OeqO4\",\"button\":\"ContactListItem_button__SG6H2\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\nimport { useDeleteContactsMutation } from '../../redux/contactSlice';\nimport Avatar from '@mui/material/Avatar';\nimport Stack from '@mui/material/Stack';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { ListItem } from '@mui/material';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const [deleteContact] = useDeleteContactsMutation();\n  // console.log(number);\n  function stringToColor(string: string) {\n    let hash = 0;\n    let i;\n\n    /* eslint-disable no-bitwise */\n    for (i = 0; i < string.length; i += 1) {\n      hash = string.charCodeAt(i) + ((hash << 5) - hash);\n    }\n\n    let color = '#';\n\n    for (i = 0; i < 3; i += 1) {\n      const value = (hash >> (i * 8)) & 0xff;\n      color += `00${value.toString(16)}`.slice(-2);\n    }\n    /* eslint-enable no-bitwise */\n\n    return color;\n  }\n\n  function stringAvatar(name: string) {\n    return {\n      sx: {\n        bgcolor: stringToColor(name.name),\n      },\n      children: `${name.name.split(' ')[0][0]}`,\n    };\n  }\n\n  return (\n    <ListItem>\n      <Stack direction=\"row\" spacing={2}>\n        <Avatar {...stringAvatar({ name })} />\n      </Stack>\n      <span className={s.itemElement}>{name}:</span>\n      <span className={s.itemElement}>{number}</span>\n      <IconButton\n        aria-label=\"delete\"\n        // color=\"primary\"\n        onClick={() => deleteContact(id)}\n      >\n        <DeleteIcon />\n      </IconButton>\n      {/* <button className={s.button} onClick={() => deleteContact(id)}>\n        Delete\n      </button> */}\n    </ListItem>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport ContactListItem from '../ContactListItem/ContactListItem';\nimport { CssVarsProvider } from '@mui/joy/styles';\nimport Typography from '@mui/joy/Typography';\nimport Sheet from '@mui/joy/Sheet';\nimport { List } from '@mui/material';\n// import s from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/filterSlice';\nimport { useFetchContactsQuery } from '../../redux/contactSlice';\n\nconst ContactList = () => {\n  const filter = useSelector(getFilter);\n  const { data } = useFetchContactsQuery();\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    if (data) {\n      return data.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <>\n      <CssVarsProvider>\n        <Sheet\n          sx={{\n            maxWidth: 400,\n            mx: 'auto',\n            my: 4,\n            py: 3,\n            px: 2,\n            display: 'flex',\n            flexDirection: 'column',\n            gap: 2,\n            borderRadius: 'sm',\n            boxShadow: 'md',\n          }}\n        >\n          <div>\n            <Typography level=\"h4\" component=\"h1\">\n              <b>Contacts</b>\n            </Typography>\n            <Typography level=\"body2\">\n              Please, find out your contacts\n            </Typography>\n          </div>\n        </Sheet>\n      </CssVarsProvider>\n      <List component=\"div\">\n        {data &&\n          visibleContacts.map(({ id, name, number }) => (\n            <ContactListItem key={id} id={id} name={name} number={number} />\n          ))}\n      </List>\n    </>\n  );\n};\n\nexport default ContactList;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\n// import Filter from 'components/Filter/Filter';\n\nexport default function ContactsView() {\n  return (\n    <div\n      style={{\n        minWidth: '400px',\n        display: 'flex',\n        justifyContent: 'space-around',\n        padding: '10px',\n        height: '100vh',\n        margin: '0 auto',\n      }}\n    >\n      <ContactForm />\n      {/* <Filter /> */}\n      <ContactList />\n    </div>\n  );\n}\n"],"names":["useState","name","setName","number","setNumber","data","useFetchContactsQuery","useCreateContactsMutation","createContact","handleChange","event","currentTarget","value","console","warn","reset","CssVarsProvider","Sheet","sx","maxWidth","mx","my","py","px","display","flexDirection","gap","borderRadius","boxShadow","Typography","level","component","onSubmit","preventDefault","contact","id","nanoid","find","toLowerCase","getSameName","alert","TextField","type","placeholder","label","onChange","pattern","title","required","Button","color","mt","useDeleteContactsMutation","deleteContact","stringToColor","string","i","hash","length","charCodeAt","toString","slice","ListItem","Stack","direction","spacing","Avatar","bgcolor","children","split","stringAvatar","className","s","IconButton","onClick","Delete","filter","useSelector","getFilter","visibleContacts","normalizedFilter","includes","getVisibleContacts","List","map","ContactsView","style","minWidth","justifyContent","padding","height","margin"],"sourceRoot":""}