{"version":3,"file":"static/js/684.90e5756b.chunk.js","mappings":"kTAQMA,EAAS,CACbC,KAAM,CACJC,QAAS,eACTC,eAAgB,OAChBC,WAAY,IACZC,MAAO,WAETC,WAAY,CACVJ,QAAS,eACTC,eAAgB,OAChBC,WAAY,IACZC,MAAO,YAII,SAASE,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACA,GAA0BN,EAAAA,EAAAA,UAAS,MAAnC,eAAOO,EAAP,KAAcC,EAAd,KACMC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,EAAAA,kBAEtBC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUZ,EAAoB,EAApBA,KAAMa,EAAc,EAAdA,MACtC,OAAQb,GACN,IAAK,OACH,OAAOC,EAAQY,GACjB,IAAK,QACH,OAAOV,EAASU,GAClB,IAAK,WACH,OAAOR,EAAYQ,GACrB,QACE,SAkBN,OANAC,EAAAA,EAAAA,YAAU,WACJN,GACFD,GAAS,KAEV,CAACC,KAGF,SAAC,KAAD,WACE,UAAC,IAAD,CACEO,GAAI,CACFC,SAAU,IACVC,UAAW,sBACXC,GAAI,OACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJ9B,QAAS,OACT+B,cAAe,SACfC,IAAK,EACLC,aAAc,KACdC,UAAW,MAZf,WAeE,4BACE,SAAC,IAAD,CAAYC,MAAM,KAAKC,UAAU,KAAjC,UACE,uCAEF,SAAC,IAAD,CAAYD,MAAM,QAAlB,qCAEF,kBAAME,SArCS,SAAAC,GACnBA,EAAEC,iBACFjC,EAASkC,EAAAA,EAAAA,SAAwB,CAAE/B,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,MAmCd4B,aAAa,MAA3C,WACE,SAAC,IAAD,CACEhC,KAAK,OACLiC,KAAK,OACLpB,MAAOb,EACPkC,YAAY,WACZC,MAAM,OACNC,UAAQ,EACRC,SAAU1B,KAEZ,SAAC,IAAD,CACEX,KAAK,QACLiC,KAAK,QACLpB,MAAOX,EACPgC,YAAY,oBACZC,MAAM,QACNC,UAAQ,EACRC,SAAU1B,EACVI,GAAI,CACFuB,GAAI,MAGR,SAAC,IAAD,CACEtC,KAAK,WACLiC,KAAK,WACLC,YAAY,WACZC,MAAM,WACNtB,MAAOT,EACPgC,UAAQ,EACRC,SAAU1B,EACVI,GAAI,CACFuB,GAAI,MAIR,SAAC,IAAD,CACEL,KAAK,SACLvC,MAAM,UACNqB,GAAI,CACFuB,GAAI,GAJR,wBAUDhC,IACC,SAAC,IAAD,CACES,GAAI,CACFrB,MAAO,WAFX,0HASF,SAAC,IAAD,CACE6C,cACE,SAAC,KAAD,CACEC,GAAG,SACHC,MAAM,OACNC,MAAO,qBAAGC,SACGtD,EAAOM,WAAaN,EAAOC,MAJ1C,oBAUFsD,SAAS,KACT7B,GAAI,CAAE8B,UAAW,UAbnB","sources":["views/RegisterView.js"],"sourcesContent":["import { CssVarsProvider } from '@mui/joy/styles';\nimport { Sheet, Typography, TextField, Button } from '@mui/joy';\nimport { NavLink } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport authOperations from '../redux/auth/auth-operations';\nimport authSelectors from '../redux/auth/auth-selectors';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    fontWeight: 700,\n    color: '#054DA7',\n  },\n  activeLink: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    fontWeight: 700,\n    color: '#096BDE',\n  },\n};\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(null);\n  const isError = useSelector(authSelectors.getErrorRegister);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    // setName('');\n    // setEmail('');\n    // setPassword('');\n  };\n\n  useEffect(() => {\n    if (isError) {\n      setError(true);\n    }\n  }, [isError]);\n\n  return (\n    <CssVarsProvider>\n      <Sheet\n        sx={{\n          maxWidth: 350,\n          minHeight: 'calc(100vh - 250px)',\n          mx: 'auto',\n          my: 4,\n          py: 3,\n          px: 2,\n          display: 'flex',\n          flexDirection: 'column',\n          gap: 2,\n          borderRadius: 'sm',\n          boxShadow: 'md',\n        }}\n      >\n        <div>\n          <Typography level=\"h4\" component=\"h1\">\n            <b>Welcome!</b>\n          </Typography>\n          <Typography level=\"body2\">Sign up to continue</Typography>\n        </div>\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\n          <TextField\n            name=\"name\"\n            type=\"text\"\n            value={name}\n            placeholder=\"John Doe\"\n            label=\"Name\"\n            required\n            onChange={handleChange}\n          />\n          <TextField\n            name=\"email\"\n            type=\"email\"\n            value={email}\n            placeholder=\"johndoe@email.com\"\n            label=\"Email\"\n            required\n            onChange={handleChange}\n            sx={{\n              mt: 2,\n            }}\n          />\n          <TextField\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"password\"\n            label=\"Password\"\n            value={password}\n            required\n            onChange={handleChange}\n            sx={{\n              mt: 2,\n            }}\n          />\n\n          <Button\n            type=\"submit\"\n            color=\"primary\"\n            sx={{\n              mt: 4,\n            }}\n          >\n            Sign up\n          </Button>\n        </form>\n        {error && (\n          <Typography\n            sx={{\n              color: '#ff0000',\n            }}\n          >\n            Please, check your data! Does your password contain at least 7\n            characters? Have you already got an account?\n          </Typography>\n        )}\n        <Typography\n          endDecorator={\n            <NavLink\n              to=\"/login\"\n              exact=\"true\"\n              style={({ isActive }) =>\n                isActive ? styles.activeLink : styles.link\n              }\n            >\n              Log in\n            </NavLink>\n          }\n          fontSize=\"sm\"\n          sx={{ alignSelf: 'center' }}\n        >\n          Have you already got an account?\n        </Typography>\n      </Sheet>\n    </CssVarsProvider>\n  );\n}\n"],"names":["styles","link","display","textDecoration","fontWeight","color","activeLink","RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","error","setError","isError","useSelector","authSelectors","handleChange","target","value","useEffect","sx","maxWidth","minHeight","mx","my","py","px","flexDirection","gap","borderRadius","boxShadow","level","component","onSubmit","e","preventDefault","authOperations","autoComplete","type","placeholder","label","required","onChange","mt","endDecorator","to","exact","style","isActive","fontSize","alignSelf"],"sourceRoot":""}